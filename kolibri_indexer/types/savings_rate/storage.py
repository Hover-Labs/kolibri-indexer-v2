# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, Extra


class Balances(BaseModel):
    class Config:
        extra = Extra.forbid

    approvals: Dict[str, str]
    balance: str


class TokenMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    token_id: str
    token_info: Dict[str, str]


class SavingsRateStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    balances: Dict[str, Balances]
    governorContractAddress: str
    interestRate: str
    lastInterestCompoundTime: str
    metadata: Dict[str, str]
    pauseGuardianContractAddress: str
    paused: bool
    savedState_depositor: Optional[str]
    savedState_redeemer: Optional[str]
    savedState_tokensToDeposit: Optional[str]
    savedState_tokensToRedeem: Optional[str]
    stabilityFundContractAddress: str
    state: str
    tokenContractAddress: str
    token_metadata: Dict[str, TokenMetadata]
    totalSupply: str
    underlyingBalance: str
